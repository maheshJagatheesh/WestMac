{"version":3,"sources":["../../src/pages/chat-view-image/chat-view-image.module.ts","../../src/pages/chat-view-image/chat-view-image.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACM;AAUtD;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QARnC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,2EAAiB,CAAC;aAC5C;SACF,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZM;AACyB;AACJ;AAC6B;AAC5F,kFAAkF;AACP;AAgB3E;IAEE,6DAA6D;IAE7D,2BAAoB,OAAsB,EAChC,SAAoB,EACpB,MAAsB,EACtB,GAA2B,EAC3B,GAAa,EACb,kBAAsC;QALhD,iBAaC;QAbmB,YAAO,GAAP,OAAO,CAAe;QAChC,cAAS,GAAT,SAAS,CAAW;QACpB,WAAM,GAAN,MAAM,CAAgB;QACtB,QAAG,GAAH,GAAG,CAAwB;QAC3B,QAAG,GAAH,GAAG,CAAU;QACb,uBAAkB,GAAlB,kBAAkB,CAAoB;QAG9C,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACf,GAAG,CAAC,wBAAwB,CAAC;gBAC3B,KAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAc,GAAd;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,iCAAK,GAAL;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,4BAA4B;IAC5B,4DAA4D;IAC5D,mDAAmD;IACnD,oFAAoF;IACpF,uDAAuD;IACvD,oBAAoB;IACpB,uDAAuD;IACvD,QAAQ;IACR,IAAI;IAEU,2CAAe,GAA7B;;;;;;wBACE,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;4BACtB,sBAAO,OAAO,CAAC,IAAI,CAAC,kBAAkB,EAAC;yBACxC;wBAED,sFAAsF;wBACtF,6DAA6D;wBAC7D,qBAAM,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,gBAAM;gCAClH,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;oCACzB,OAAO,KAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;iCAC7G;4BACH,CAAC,CAAC;;wBANF,sFAAsF;wBACtF,6DAA6D;wBAC7D,SAIE,CAAC;wBAEH,sBAAO,OAAO,CAAC,IAAI,CAAC,qBAAqB,GAAG,YAAY,EAAC;;;;KAC1D;IAnDU,iBAAiB;QAJ7B,gEAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;WACG;SACpC,CAAC;6EAK0C;YACrB,gFAAS;YACZ,6GAAc;YAClB,gEAAuB;YACtB,iGAAQ;YACO,cAAkB;OATrC,iBAAiB,CAqD7B;IAAD,CAAC;AAAA;SArDY,iBAAiB,iB","file":"90.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChatViewImagePage } from './chat-view-image';\n\n@NgModule({\n  declarations: [\n    ChatViewImagePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ChatViewImagePage),\n  ],\n})\nexport class ChatViewImagePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat-view-image/chat-view-image.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Platform } from 'ionic-angular';\nimport { GlobalProvider } from '../../providers/global/global';\nimport { GlobalFunctionsProvider } from '../../providers/global-functions/global-functions';\n// import { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer';\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\n\n/**\n * Generated class for the ChatViewImagePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\ndeclare let cordova:any;\n\n@IonicPage()\n@Component({\n  selector: 'page-chat-view-image',\n  templateUrl: 'chat-view-image.html',\n})\nexport class ChatViewImagePage {\n  image: any;\n  // fileTransfer: FileTransferObject = this.transfer.create();\n\n  constructor(private navCtrl: NavController, \n    private navParams: NavParams, \n    private global: GlobalProvider, \n    private gFn:GlobalFunctionsProvider,\n    private plt: Platform,\n    private androidPermissions: AndroidPermissions,\n    // private transfer: FileTransfer\n    ) {\n    plt.ready().then(()=>{\n      plt.registerBackButtonAction(()=>{\n        this.close();\n      });\n    });\n  }\n\n  ionViewDidLoad() {\n    this.image = this.navParams.get('image');\n  }\n\n  close(){\n    this.navCtrl.pop();\n  }\n\n  // private async download(){\n  //   const imageURL = this.global.MESSAGEIMAGE + this.image;\n  //   let targetPath = await this.getDownloadPath();\n  //   this.fileTransfer.download(imageURL, targetPath + this.image).then((entry) => {\n  //     this.gFn.presentToast('File download complete');\n  //   }, (error) => {\n  //     this.gFn.presentToast('Error in file download');\n  //   });\n  // }\n\n  private async getDownloadPath() {\n    if (this.plt.is(\"ios\")) {\n      return cordova.file.documentsDirectory;\n    }\n\n    // To be able to save files on Android, we first need to ask the user for permission. \n    // We do not let the download proceed until they grant access\n    await this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE).then(result => {\n      if (!result.hasPermission) {\n        return this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE);\n      }\n    });\n\n    return cordova.file.externalRootDirectory + \"/Download/\";\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat-view-image/chat-view-image.ts"],"sourceRoot":""}