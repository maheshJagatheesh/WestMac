{"version":3,"sources":["../../src/pages/gallery-timeline/gallery-timeline.module.ts","../../src/pages/gallery-timeline/gallery-timeline.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACS;AAUzD;IAAA;IAAwC,CAAC;IAA5B,yBAAyB;QARrC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,8EAAmB;aACpB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,8EAAmB,CAAC;aAC9C;SACF,CAAC;OACW,yBAAyB,CAAG;IAAD,gCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZI;AACoF;AAChE;AACrB;AACS;AACa;AACb;AACJ;AACS;AACqC;AAClB;AAe1E;IAIE,6BACS,OAAsB,EACtB,SAAoB,EACnB,IAAgB,EACjB,OAAgB,EACf,MAAc,EACd,WAA8B,EAC/B,MAAsB,EACtB,eAAsC,EACtC,MAAc,EACd,QAAkB,EACjB,IAAU,EACV,QAAkB,EACnB,SAA0B,EAC1B,GAA2B,EAC3B,UAA4B;QAfrC,iBAsBC;QArBQ,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACnB,SAAI,GAAJ,IAAI,CAAY;QACjB,YAAO,GAAP,OAAO,CAAS;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAmB;QAC/B,WAAM,GAAN,MAAM,CAAgB;QACtB,oBAAe,GAAf,eAAe,CAAuB;QACtC,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QACjB,SAAI,GAAJ,IAAI,CAAM;QACV,aAAQ,GAAR,QAAQ,CAAU;QACnB,cAAS,GAAT,SAAS,CAAiB;QAC1B,QAAG,GAAH,GAAG,CAAwB;QAC3B,eAAU,GAAV,UAAU,CAAkB;QAjB7B,mBAAc,GAAU,EAAE,CAAC;QAoBjC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACvC,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;YAC5B,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAiB,GAAjB;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACzC,CAAC;IAED,+CAAiB,GAAjB;QACE,yCAAyC;IAC3C,CAAC;IAED,wDAA0B,GAA1B;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;IAClD,CAAC;IAEO,gDAAkB,GAA1B;QAAA,iBAgBC;QAfC,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QACxC,OAAO,CAAC,OAAO,EAAE,CAAC;QAClB,IAAI,IAAI,GAAG,IAAI,wEAAU,EAAE;aACxB,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,4BAA4B,EAAE,IAAI,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,EAAC,CAAC;aAC/G,SAAS,CAAC,kBAAQ;YACjB,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,IAAI,QAAQ,CAAC,OAAO,EAAE;gBACpB,KAAI,IAAI,GAAG,IAAI,QAAQ,CAAC,gBAAgB,EAAC;oBACvC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC1D;aACF;QACH,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6CAAe,GAAtB;QAAA,iBA0BC;QAzBC,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YAC5C,KAAK,EAAE,qBAAqB;YAC5B,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,cAAc;oBACpB,IAAI,EAAE,cAAc;oBACpB,OAAO,EAAE;wBACP,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;oBAC/D,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,aAAa;oBACnB,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE;wBACP,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;oBACzD,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,cAAc;oBACpB,IAAI,EAAE,QAAQ;iBACf;aACF;SACF,CAAC,CAAC;QACH,WAAW,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAEM,yCAAW,GAAlB,UAAmB,UAAU;QAA7B,iBA2BC;QA1BC,uCAAuC;QACvC,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,GAAG;YACZ,UAAU,EAAE,UAAU;YACtB,gBAAgB,EAAE,KAAK;YACvB,kBAAkB,EAAE,IAAI;SACzB,CAAC;QAEF,2BAA2B;QAC3B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,SAAS;YAC7C,uCAAuC;YACvC,IAAI,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,UAAU,KAAK,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,YAAY,EAAE;gBAC5F,KAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,SAAS,CAAC;qBACvC,IAAI,CAAC,kBAAQ;oBACZ,IAAI,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;oBACpE,IAAI,WAAW,GAAG,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;oBAClG,KAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAI,CAAC,cAAc,EAAE,CAAC,CAAC;gBAC3E,CAAC,CAAC,CAAC;aACN;iBAAM;gBACL,IAAI,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACnE,IAAI,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACtE,KAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAI,CAAC,cAAc,EAAE,CAAC,CAAC;aAC1E;QACH,CAAC,EAAE,UAAC,GAAG;YACL,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAkC;IAC1B,4CAAc,GAAtB;QACE,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,EAChB,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EACf,WAAW,GAAG,CAAC,GAAG,MAAM,CAAC;QAC3B,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,mCAAmC;IAC3B,gDAAkB,GAA1B,UAA2B,QAAQ,EAAE,WAAW,EAAE,WAAW;QAA7D,iBAMC;QALC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,WAAW,EAAE,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,iBAAO;YAC7F,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,0CAAY,GAApB,UAAqB,IAAI;QACvB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,mDAAmD;IAC5C,0CAAY,GAAnB,UAAoB,GAAG;QACrB,IAAI,GAAG,KAAK,IAAI,EAAE;YAChB,OAAO,EAAE,CAAC;SACX;aAAM;YACL,OAAO,OAAO,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;SACzC;IACH,CAAC;IAED,yCAAW,GAAX,UAAY,QAAQ;QAApB,iBAOC;QANC,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,UAAkB;YACzD,KAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC;QACnD,CAAC,EAAE,UAAC,GAAG;YACL,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAW,GAAX,UAAY,YAAY;QAAxB,iBAkBC;QAjBC,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QACxC,OAAO,CAAC,OAAO,EAAE,CAAC;QAClB,IAAI,IAAI,GAAG,IAAI,wEAAU,EAAE;aACxB,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;aACjD,GAAG,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,8BAA8B,EAAE,IAAI,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,EAAC,CAAC;aACjH,SAAS,CAAC,kBAAQ;YACjB,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,IAAI,QAAQ,CAAC,OAAO,EAAE;gBACpB,KAAI,CAAC,YAAY,CAAC,8BAA8B,CAAC,CAAC;aACnD;iBAAM;gBACL,KAAI,CAAC,YAAY,CAAC,4BAA4B,CAAC,CAAC;aACjD;QACH,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,KAAI,CAAC,YAAY,CAAC,4BAA4B,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACP,CAAC;IAjLU,mBAAmB;QAJ/B,gEAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;WACG;SACrC,CAAC;6EAM+B;YACX,wEAAS;YACb,gEAAU;YACR,yEAAO;YACP,wEAAM;YACD,iFAAiB;YACvB,4EAAc;YACL,yEAAqB;YAC9B,+DAAM;YACJ,qEAAQ;YACX,6EAAI;YACA,sEAAQ;YACR,6GAAe;YACtB,8FAAuB;YAChB,gBAAiB;OAnB1B,mBAAmB,CAmL/B;IAAD,CAAC;AAAA;SAnLY,mBAAmB,gB","file":"58.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { GalleryTimelinePage } from './gallery-timeline';\n\n@NgModule({\n  declarations: [\n    GalleryTimelinePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(GalleryTimelinePage),\n  ],\n})\nexport class GalleryTimelinePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/gallery-timeline/gallery-timeline.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController, ActionSheetController, Platform, ToastController } from 'ionic-angular';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Storage } from '@ionic/storage';\nimport { Base64 } from '@ionic-native/base64/ngx';\nimport { GlobalProvider } from '../../providers/global/global';\nimport { Camera } from '@ionic-native/camera/ngx';\nimport { File } from '@ionic-native/file/ngx';\nimport { FilePath } from '@ionic-native/file-path/ngx';\nimport { GlobalFunctionsProvider } from '../../providers/global-functions/global-functions';\nimport { GlobalApiProvider } from '../../providers/global-api/global-api';\n\n/**\n * Generated class for the GalleryTimelinePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\ndeclare let cordova: any;\n@IonicPage()\n@Component({\n  selector: 'page-gallery-timeline',\n  templateUrl: 'gallery-timeline.html',\n})\nexport class GalleryTimelinePage{\n  private loggedInUserData: any;\n  private photosByMonths: any[] = [];\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private http: HttpClient,\n    public storage: Storage,\n    private base64: Base64,\n    private loadingCtrl: LoadingController,\n    public global: GlobalProvider,\n    public actionSheetCtrl: ActionSheetController,\n    public camera: Camera,\n    public platform: Platform,\n    private file: File,\n    private filePath: FilePath,\n    public toastCtrl: ToastController,\n    public gFn:GlobalFunctionsProvider,\n    public global_api:GlobalApiProvider\n  ) {\n    \n    storage.get('loggedInUserData').then((val) => {\n      this.loggedInUserData = val;\n      this.loadTimelinePhotos();\n    });\n  }\n\n  goToGalleryEvents() {\n    this.navCtrl.push('GalleryEventsPage');\n  }\n\n  goToGalleryAlbums() {\n    //this.navCtrl.push('GalleryAlbumsPage');\n  }\n\n  goToGalleryTimelineDetails() {\n    this.navCtrl.push('GalleryTimelineDetailsPage');\n  }\n\n  private loadTimelinePhotos(){\n    let loading = this.loadingCtrl.create();\n    loading.present();\n    let data = new HttpParams()\n      .set('person_id', this.loggedInUserData.PERSON_ID);\n    this.http.post<any>(this.global.APIURL + 'galleries/getTimeLinePhoto', data,{headers:this.global_api.getHeader()})\n      .subscribe(response => {\n        loading.dismiss();\n        if (response.SUCCESS) {\n          for(let key in response.GETTIMELINEPHOTO){\n            this.photosByMonths.push(response.GETTIMELINEPHOTO[key]);\n          }\n        }\n      }, error => {\n        loading.dismiss();\n      });\n  }\n\n  public addGalleryImage() {\n    let actionSheet = this.actionSheetCtrl.create({\n      title: 'Select Image Source',\n      buttons: [\n        {\n          text: 'From Gallery',\n          icon: 'cloud-upload',\n          handler: () => {\n            this.takePicture(this.camera.PictureSourceType.PHOTOLIBRARY);\n          }\n        },\n        {\n          text: 'From Camera',\n          icon: 'camera',\n          handler: () => {\n            this.takePicture(this.camera.PictureSourceType.CAMERA);\n          }\n        },\n        {\n          text: 'Cancel',\n          icon: 'close-circle',\n          role: 'cancel'\n        }\n      ]\n    });\n    actionSheet.present();\n  }\n\n  public takePicture(sourceType) {\n    // Create options for the Camera Dialog\n    var options = {\n      quality: 100,\n      sourceType: sourceType,\n      saveToPhotoAlbum: false,\n      correctOrientation: true\n    };\n\n    // Get the data of an image\n    this.camera.getPicture(options).then((imagePath) => {\n      // Special handling for Android library\n      if (this.platform.is('android') && sourceType === this.camera.PictureSourceType.PHOTOLIBRARY) {\n        this.filePath.resolveNativePath(imagePath)\n          .then(filePath => {\n            let correctPath = filePath.substr(0, filePath.lastIndexOf('/') + 1);\n            let currentName = imagePath.substring(imagePath.lastIndexOf('/') + 1, imagePath.lastIndexOf('?'));\n            this.copyFileToLocalDir(correctPath, currentName, this.createFileName());\n          });\n      } else {\n        var currentName = imagePath.substr(imagePath.lastIndexOf('/') + 1);\n        var correctPath = imagePath.substr(0, imagePath.lastIndexOf('/') + 1);\n        this.copyFileToLocalDir(correctPath, currentName, this.createFileName());\n      }\n    }, (err) => {\n      this.presentToast(err);\n    });\n  }\n\n  // Create a new name for the image\n  private createFileName() {\n    var d = new Date(),\n      n = d.getTime(),\n      newFileName = n + \".jpg\";\n    return newFileName;\n  }\n\n  // Copy the image to a local folder\n  private copyFileToLocalDir(namePath, currentName, newFileName) {\n    this.file.copyFile(namePath, currentName, cordova.file.dataDirectory, newFileName).then(success => {\n      this.uploadImage(newFileName);\n    }, error => {\n      this.presentToast(error);\n    });\n  }\n\n  private presentToast(text) {\n    let toast = this.toastCtrl.create({\n      message: text,\n      duration: 3000,\n      position: 'top'\n    });\n    toast.present();\n  }\n\n  // Always get the accurate path to your apps folder\n  public pathForImage(img) {\n    if (img === null) {\n      return '';\n    } else {\n      return cordova.file.dataDirectory + img;\n    }\n  }\n\n  uploadImage(fileName) {\n    let targetPath = this.pathForImage(fileName);\n    this.base64.encodeFile(targetPath).then((base64File: string) => {\n      this.uploadPhoto(encodeURIComponent(base64File));\n    }, (err) => {\n      this.presentToast(err);\n    });\n  }\n\n  uploadPhoto(galleryImage) {\n    let loading = this.loadingCtrl.create();\n    loading.present();\n    let data = new HttpParams()\n      .set('person_id', this.loggedInUserData.PERSON_ID)\n      .set('uploadImage', galleryImage);\n    this.http.post<any>(this.global.APIURL + 'galleries/uploadGalleryPhoto', data,{headers:this.global_api.getHeader()})\n      .subscribe(response => {\n        loading.dismiss();\n        if (response.SUCCESS) {\n          this.presentToast('Image uploaded successfully.');\n        } else {\n          this.presentToast('Sorry, image upload error.');\n        }\n      }, error => {\n        loading.dismiss();\n        this.presentToast('Sorry, image upload error.');\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/gallery-timeline/gallery-timeline.ts"],"sourceRoot":""}