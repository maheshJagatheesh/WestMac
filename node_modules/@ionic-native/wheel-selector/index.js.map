{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/wheel-selector/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsLrC,iCAAiB;;;;IAElD;;;;OAIG;;;;;;IAEH,4BAAI;;;;;cAAC,OAA6B;QAChC,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAIH,oCAAY;;;;kBAAoB,MAAM,CAAC,EAAE;;gBApB1C,UAAU;;;QAQR,OAAO,EAAE;;;;6CAGT;;QAMA,OAAO,CAAC;YACP,SAAS,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC;;;;qDACuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAnB9B,aAAa;QATzB,MAAM,CAAC;YACN,UAAU,EAAE,eAAe;YAC3B,MAAM,EAAE,+BAA+B;YACvC,SAAS,EAAE,uBAAuB;YAClC,IAAI,EAAE,4DAA4D;YAClE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAGW,aAAa,EAoBzB;wBA3MD;EAuLmC,iBAAiB;SAAvC,aAAa","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface WheelSelectorItem {\n  description?: string;\n}\n\nexport interface DefaultItem {\n  index: number;\n  value: string;\n}\n\nexport interface WheelSelectorOptions {\n  /**\n   * The title of the selector's input box\n   */\n  title: string;\n\n  /**\n   * The items to display (array of items).\n   */\n  items: WheelSelectorItem[][];\n\n  /**\n   * Which items to display by default.\n   */\n  defaultItems?: DefaultItem[];\n\n  /**\n   * The 'ok' button text\n   * Default: Done\n   */\n  positiveButtonText?: string;\n\n  /**\n   * The 'cancel' button text\n   * Default: Cancel\n   */\n  negativeButtonText?: string;\n\n  /**\n   * Android only - theme color, 'light' or 'dark'.\n   * Default: light\n   */\n  theme?: 'light' | 'dark';\n\n  /**\n   * Whether to have the wheels 'wrap' (Android only)\n   * Default: false\n   */\n  wrapWheelText?: boolean;\n\n  /**\n   * The json key to display, by default it is description, this allows for setting any\n   * key/value to be displayed\n   * Default: description\n   */\n  displayKey?: string;\n}\n\nexport interface WheelSelectorData {\n  data: any;\n}\n\n/**\n * @beta\n * @name WheelSelector Plugin\n * @description Native wheel selector for Cordova (Android/iOS).\n *\n * @usage\n * ```\n * import { WheelSelector } from '@ionic-native/wheel-selector';\n *\n *\n * constructor(private selector: WheelSelector) { }\n *\n * ...\n *\n * const jsonData = {\n *   numbers: [\n *    { description: \"1\" },\n *     { description: \"2\" },\n *     { description: \"3\" }\n *   ],\n *   fruits: [\n *     { description: \"Apple\" },\n *     { description: \"Banana\" },\n *     { description: \"Tangerine\" }\n *   ],\n *   firstNames: [\n *     { name: \"Fred\", id: '1' },\n *     { name: \"Jane\", id: '2' },\n *     { name: \"Bob\", id: '3' },\n *     { name: \"Earl\", id: '4' },\n *     { name: \"Eunice\", id: '5' }\n *   ],\n *   lastNames: [\n *     { name: \"Johnson\", id: '100' },\n *     { name: \"Doe\", id: '101' },\n *     { name: \"Kinishiwa\", id: '102' },\n *     { name: \"Gordon\", id: '103' },\n *     { name: \"Smith\", id: '104' }\n *   ]\n * };\n *\n * ...\n *\n * // basic number selection, index is always returned in the result\n *  selectANumber() {\n *    this.selector.show({\n *      title: \"How Many?\",\n *      items: [\n *        this.jsonData.numbers\n *      ],\n *    }).then(\n *      result => {\n *        console.log(result[0].description + ' at index: ' + result[0].index);\n *      },\n *      err => console.log('Error: ', err)\n *      );\n *  }\n *\n *  ...\n *\n *  // basic selection, setting initial displayed default values: '3' 'Banana'\n *  selectFruit() {\n *    this.selector.show({\n *      title: \"How Much?\",\n *      items: [\n *        this.jsonData.numbers, this.jsonData.fruits\n *      ],\n *      positiveButtonText: \"Ok\",\n *      negativeButtonText: \"Nope\",\n *      defaultItems: [\n *  \t  {index:0, value: this.jsonData.numbers[2].description},\n *  \t  {index: 1, value: this.jsonData.fruits[3].description}\n *  \t]\n *    }).then(\n *      result => {\n *        console.log(result[0].description + ' ' + result[1].description);\n *      },\n *      err => console.log('Error: ' + JSON.stringify(err))\n *      );\n *  }\n *\n *  ...\n *\n *  // more complex as overrides which key to display\n *  // then retrieve properties from original data\n *  selectNamesUsingDisplayKey() {\n *    this.selector.show({\n *      title: \"Who?\",\n *      items: [\n *        this.jsonData.firstNames, this.jsonData.lastNames\n *      ],\n *      displayKey: 'name',\n *      defaultItems: [\n *  \t  {index:0, value: this.jsonData.firstNames[2].name},\n *        {index: 0, value: this.jsonData.lastNames[3].name}\n *      ]\n *    }).then(\n *      result => {\n *        console.log(result[0].name + ' (id= ' + this.jsonData.firstNames[result[0].index].id + '), ' +\n *          result[1].name + ' (id=' + this.jsonData.lastNames[result[1].index].id + ')');\n *      },\n *      err => console.log('Error: ' + JSON.stringify(err))\n *      );\n *  }\n *\n * ```\n *\n * @interfaces\n * WheelSelectorOptions\n */\n@Plugin({\n  pluginName: 'WheelSelector',\n  plugin: 'cordova-wheel-selector-plugin',\n  pluginRef: 'SelectorCordovaPlugin',\n  repo: 'https://github.com/jasonmamy/cordova-wheel-selector-plugin',\n  platforms: ['Android', 'iOS']\n})\n\n@Injectable()\nexport class WheelSelector extends IonicNativePlugin {\n\n  /**\n   * Shows the wheel selector\n   * @param {WheelSelectorOptions} options Options for the wheel selector\n   * @returns {Promise<WheelSelectorData>} Returns a promise that resolves with the selected items, or an error.\n   */\n  @Cordova()\n  show(options: WheelSelectorOptions): Promise<WheelSelectorData> {\n    return;\n  }\n\n  /**\n   * Hide the selector\n   * @returns {Promise<void>}\n   */\n  @Cordova({\n    platforms: ['iOS']\n  })\n  hideSelector(): Promise<void> { return; }\n}\n"]}