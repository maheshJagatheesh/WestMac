{"version":3,"sources":["../../src/pages/injury-cause/injury-cause.module.ts","../../src/pages/injury-cause/injury-cause.ts"],"names":[],"mappings":"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","file":"53.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { InjuryCausePage } from './injury-cause';\n\n@NgModule({\n  declarations: [\n    InjuryCausePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(InjuryCausePage),\n  ],\n})\nexport class InjuryCausePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/injury-cause/injury-cause.module.ts","import { Component } from \"@angular/core\";\nimport {\n  IonicPage,\n  NavController,\n  NavParams,\n  Events,\n  ModalController,\n  LoadingController,\n  ViewController,\n  \n} from \"ionic-angular\";\n\n\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { GlobalProvider } from \"../../providers/global/global\";\nimport { StatusBar } from \"@ionic-native/status-bar/ngx\";\nimport { GlobalFunctionsProvider } from \"../../providers/global-functions/global-functions\";\nimport { GlobalApiProvider } from \"../../providers/global-api/global-api\";\n\n@IonicPage()\n@Component({\n  selector: \"page-injury-cause\",\n  templateUrl: \"injury-cause.html\",\n})\nexport class InjuryCausePage {\n  header: any;\n  Selectors: any = [];\n  incident_area_ids: any = [];\n  incident_area_datas: any = [];\n  callback: any;\n  groupId: any = 0;\n  dropdownValues: any = [];\n  selectedValues: any = [];\n  CountValues: any = 0;\n  SELECTEDTEAM: any = 0;\n  incident_id: any = 0;\n  injuryValues: any = [];\n  injurySelectedVlaues: any = [];\n  injurySelectedAreaid: any = [];\n  injurySelectedAreadata: any = [];\n  checkboxValue: boolean = true;\n  specifiedValues: {text: string }[] = [];\n  index: any;\n  msgstatus:any;\n\n\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private http: HttpClient,\n    public global: GlobalProvider,\n    private events: Events,\n    public modalCtrl: ModalController,\n    public loadingCtrl: LoadingController,\n    public viewCtrl: ViewController,\n    public statusBar: StatusBar,\n    public gFn: GlobalFunctionsProvider,\n    public global_api: GlobalApiProvider\n  ) {\n    this.gFn.hideMenuIcon();\n    this.callback = this.navParams.get(\"callback\");\n  }\n\n  ionViewDidLoad() {\n    this.statusBar.hide();\n    this.groupId = parseInt(this.navParams.get(\"group_id\"));\n    this.header = this.navParams.get(\"Data\");\n    this.SELECTEDTEAM = this.navParams.get(\"SELECTEDTEAM\");\n    this.incident_id = this.navParams.get(\"incident_id\");\n    this.incident_area_ids = JSON.parse(\n      this.navParams.get(\"incident_area_ids\")\n    );\n    this.incident_area_datas = JSON.parse(\n      this.navParams.get(\"incident_area_datas\")\n    );\n    \n    this.injuryValues = JSON.parse(this.navParams.get(\"dropdownValues\"));\n    this.dropdownValues = JSON.parse(this.navParams.get(\"dropdownValues\"));\n\n    \n    this.selectedValues = JSON.parse(this.navParams.get(\"selectedValues\"));\n    let values = JSON.parse(this.navParams.get(\"selectedValues\"));\n    \n    this.injurySelectedVlaues = this.gettingInjuryValues(values, this.header,this.dropdownValues);\n    // debugger;\n    //this.injuryValues = this.updateStatusBasedOnSelected(this.injuryValues,this.selectedValues)\n    this.index = this.navParams.get(\"index\");\n    this.msgstatus =JSON.parse(this.navParams.get(\"msgstatus\"));\n\n    setTimeout(() => {\n      console.log(\"msgsttusss\", this.msgstatus)\n    }, 2000);\n\n\n \n    let loader = this.loadingCtrl.create({});\n    loader.present();\n    if (this.groupId != 6) {\n      this.getIncidentAreas(\n        this.groupId,\n        this.SELECTEDTEAM,\n        this.incident_id\n      ).then((x) => {\n        loader.dismiss();\n        if (!x) {\n          alert(\"Data not found or Connection issue.\");\n        }\n      });\n    } else if (this.groupId == 6) {\n      this.getIncidentAreasGrouped(this.SELECTEDTEAM, this.incident_id).then(\n        (x) => {\n          loader.dismiss();\n          if (!x) {\n            alert(\"Data not found or Connection issue.\");\n          }\n        }\n      );\n    }\n  }\n  gettingInjuryValues(values: any, header: any ,dropdownValues): any {\n    if (values.length > 0) {\n      let index = values.findIndex((item) => item.key === header);\n\n      if (index !== -1) {\n        return values[index].value\n      } else {\n        return []\n      }\n    } else {\n      return this.getValuesWithTrueStatus(this.dropdownValues)\n    }\n\n  }\n\n  \n  ionViewDidLeave() {\n    this.statusBar.show();\n    let other_area_id = this.injuryValues\n    .filter(data => data.specify && data.status)\n    .map(data => (data.id));\n\n    let other_area_text = this.injuryValues.filter(data => data.specify && data.status)\n    .map(data => (data.specify));\n\n    \n\n\n    let selectedValue = {\n      key: this.header,\n      value: this.injurySelectedVlaues,\n      // area_id: this.injurySelectedAreaid,\n      area_id: this.getSelectedIds(this.injurySelectedVlaues, this.injuryValues),\n      area_data: this.getSelectedAreaData(this.injurySelectedAreadata, this.injuryValues),\n      other_area_id,\n      other_area_text,\n    };\n    for (var key in this.dropdownValues) {\n      if (this.groupId == this.dropdownValues[key].groupId) {\n        this.dropdownValues[key].count =\n          this.dropdownValues[key].count + this.CountValues;\n      }\n    }\n    var data: any = {\n      injured_person_id: this.navParams.get(\"injured_person_id\"),\n      incident_area_ids: JSON.stringify(this.incident_area_ids),\n      incident_area_datas: JSON.stringify(this.incident_area_datas),\n      group_id: this.groupId,\n      dropdownValues: JSON.stringify(this.dropdownValues),\n      injuryselectedValues: JSON.stringify(selectedValue),\n      index: this.index,\n      updatedStatus: this.injuryValues\n\n    };\n    this.callback(data);\n  }\n  getIncidentAreas(incident_group_id, SELECTEDTEAM, incident_id) {\n    return new Promise((resolve) => {\n      let data = new HttpParams()\n        .set(\"incident_group_id\", incident_group_id)\n        .set(\"selectedTeam\", SELECTEDTEAM)\n        //  .set('incident_id',incident_id)\n        .set(\"incident_id\", \"2007\");\n\n      this.http\n        .post<any>(this.global.APIURL + \"incidents/getIncidentAreas\", data, {\n          headers: this.global_api.getHeader(),\n        })\n        .subscribe(\n          (response) => {\n            var Data = this.events.publish(\n              \"json:query\",\n              response.GETINCIDENTAREAS\n            )[0];\n            for (var key in Data) {\n              this.Selectors.push(Data[key]);\n            }\n            resolve(true);\n          },\n          (error) => {\n            resolve(false);\n          }\n        );\n    });\n  }\n  getIncidentAreasGrouped(SELECTEDTEAM, incident_id) {\n    return new Promise((resolve) => {\n      let data = new HttpParams()\n        .set(\"selectedTeam\", SELECTEDTEAM)\n        .set(\"incident_id\", incident_id);\n      this.http\n        .post<any>(\n          this.global.APIURL + \"incidents/getAllIncidentAreasGrouped\",\n          data,\n          { headers: this.global_api.getHeader() }\n        )\n        .subscribe(\n          (response) => {\n            var Data = this.events.publish(\n              \"json:query\",\n              response.GETALLINCIDENTAREASGROUPED[0]\n            )[0];\n            var Data1 = this.events.publish(\n              \"json:query\",\n              response.GETALLINCIDENTAREASGROUPED[1]\n            )[0];\n            if (this.header != \"BODY PARTS\") {\n              for (var key in Data) {\n                this.Selectors.push(Data[key]);\n              }\n            } else if (this.header == \"BODY PARTS\") {\n              var temp = [];\n              var temp1 = [];\n              for (var key in Data) {\n                temp.push(Data[key]);\n              }\n\n              for (var key in Data1) {\n                temp1.push(Data1[key]);\n              }\n              this.Selectors.push(temp);\n              this.Selectors.push(temp1);\n            }\n            resolve(true);\n          },\n          (error) => {\n            resolve(false);\n          }\n        );\n    });\n  }\n  // getIncidentDetails(AreaId,AreaData,event){\n\n  //   if(this.incident_area_ids.includes(AreaId)==false){\n  //     if(AreaData==0 || AreaData==null){\n  //       AreaData=1\n  //       this.CountValues=this.CountValues+1;\n  //     }\n  //     else{\n  //       AreaData=0\n  //       this.CountValues=this.CountValues-1;\n  //     }\n  //     this.incident_area_ids.push(AreaId)\n  //     this.incident_area_datas.push(AreaData)\n\n  //   }\n  //   else if(this.incident_area_ids.includes(AreaId)==true){\n  //     var getDataindex=this.incident_area_ids.indexOf(AreaId)\n  //     this.incident_area_ids.splice(getDataindex,1)\n  //     var area_data=this.incident_area_datas.splice(getDataindex,1)\n  //     if(area_data==0){\n  //       this.CountValues=this.CountValues+1;\n  //     }\n  //     else{\n  //       this.CountValues=this.CountValues-1;\n  //     }\n  //   }\n  // }\n\n  getIncidentDetails(key, i,list) {\n    //  this.injurySelectedVlaues.push(key)\n    //  this.injurySelectedAreadata.push(this.incident_area_datas[i])\n    //  this.injurySelectedAreaid.push(this.incident_area_ids[i])\n\n    const index = this.injurySelectedVlaues.indexOf(key.value);\n    let object = {...key}\n    if (index !== -1) {\n      // If the checkbox is unchecked, remove data from arrays\n      this.injurySelectedVlaues.splice(index, 1);\n      object.status = false;\n      // this.injurySelectedAreadata.splice(index, 1);\n      // this.injurySelectedAreaid.splice(index, 1);\n    } else {\n      // If the checkbox is checked, add data to arrays\n      this.injurySelectedVlaues.push(key.value);\n      object.status = true;\n      // this.injurySelectedAreadata.push(this.incident_area_datas[i]);\n      // this.injurySelectedAreaid.push(this.incident_area_ids[i]);\n    }\n   \n    this.injuryValues[i] = {...object};\n        \n  }\n\n\n  close() {\n    this.navCtrl.pop();\n  }\n\n  removeInjuryValues(selected: string[], injuryValues: any[]): string[] {\n    // Filter out values that exist in the injuryValues array\n    const filteredSelected = selected.filter(value => !injuryValues.some(injury => injury.value === value));\n\n    return filteredSelected;\n  }\n\n  readAddedIncidentId(AreaData, AreaId) {\n    if (this.incident_area_ids.includes(AreaId) == true) {\n      var getDataindex = this.incident_area_ids.indexOf(AreaId);\n      if (this.incident_area_datas[getDataindex] == 1) {\n        return true;\n      } else {\n        return false;\n      }\n    } else if (AreaData == 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  checkedStatus(value) {\n    // return this.selectedValues.some((item) => item.value.includes(value));\n    if(value){\n      return true;\n    } else {\n      return false;\n    }    \n  }\n  checkboxClick(event) {\n    var statement = true;\n\n    if (statement) {\n      // Modify the checkbox state using ngModel\n      this.checkboxValue = true;\n    }\n\n    console.log(\"testtt\", event);\n  }\n\n  getValuesWithTrueStatus(full: any[]): string[] {\n    // Use the filter function to get values where status is true\n    const trueStatusValues = full\n      .filter(item => item.status)\n      .map(item => item.value);\n\n    return trueStatusValues;\n  }\n\n  updateStatusBasedOnSelected(fullarray: any[], selected: any[]): any[] {\n    if(selected.length>0)\n    {\n      fullarray.forEach(item => {\n        // Check if the value exists in the selected array\n        const valueExistsInSelected = selected.some(selectedItem => selectedItem.value.includes(item.value));\n  \n        // Update the status based on the check\n        item.status = valueExistsInSelected;\n      });\n    }\n    // Iterate over each item in fullarray\n   \n\n    return fullarray;\n  }\n\n  getSelectedIds(injurySelectedValues: string[], fullarray: any[]): string[] {\n    // Filter out items from fullarray where value exists in injurySelectedValues\n    const selectedItems = fullarray\n      .filter(item => injurySelectedValues.includes(item.value))\n      .map(item => item.id.toString());\n\n    return selectedItems;\n  }\n\n  getSelectedAreaData(injurySelectedValues: string[], fullarray: any[]): string[] {\n    // Filter out items from fullarray where value exists in injurySelectedValues\n    const selectedItems = fullarray\n      .filter(item => injurySelectedValues.includes(item.value))\n      .map(item => item.status);\n\n    return selectedItems;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/injury-cause/injury-cause.ts"],"sourceRoot":""}