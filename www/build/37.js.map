{"version":3,"sources":["../../src/pages/player-group-message/player-group-message.module.ts","../../src/pages/player-group-message/player-group-message.ts"],"names":[],"mappings":"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","file":"37.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { PlayerGroupMessagePage } from './player-group-message';\n\n@NgModule({\n  declarations: [\n    PlayerGroupMessagePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(PlayerGroupMessagePage),\n  ],\n})\nexport class PlayerGroupMessagePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/player-group-message/player-group-message.module.ts","import { Component } from '@angular/core';\nimport {IonicPage, NavController, NavParams, Events, LoadingController, ToastController} from 'ionic-angular';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Storage } from '@ionic/storage';\nimport { GlobalProvider } from '../../providers/global/global';\nimport { GlobalFunctionsProvider } from '../../providers/global-functions/global-functions';\nimport { GlobalApiProvider } from '../../providers/global-api/global-api';\n\n/**\n * Generated class for the PlayerGroupMessagePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-player-group-message',\n  templateUrl: 'player-group-message.html',\n})\nexport class PlayerGroupMessagePage{\n  private loggedInUserData: any;\n  private players: any[] = [];\n  private groups: any[] = [];\n  private showGroups: boolean = false;\n  private message: string = '';\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private events: Events, private http: HttpClient, private loadingCtrl: LoadingController, public global: GlobalProvider, private toastCtrl: ToastController, public gFn:GlobalFunctionsProvider,public global_api:GlobalApiProvider) {\n    \n    this.storage.get('loggedInUserData').then((val) => {\n      this.loggedInUserData = val;\n      this.loadPlayers();\n      this.loadGroups();\n    });\n  }\n\n  loadPlayers() {\n    let loading = this.loadingCtrl.create();\n    loading.present();\n    let data = new HttpParams()\n      .set('club_division_id', this.loggedInUserData.SELECTEDTEAM)\n      .set('client_id', this.loggedInUserData.CLIENT_ID);\n    this.http.post<any>(this.global.APIURL + 'players/getTeamPlayers', data,{headers:this.global_api.getHeader()})\n      .subscribe(response => {\n        loading.dismiss();\n        if (response.SUCCESS) {\n          let players = this.events.publish('json:query', response.GETTEAMPLAYERS);\n          players = players[0];\n          for (var key in players) {\n            this.players.push(players[key]);\n          }\n        }\n      }, error => {\n        loading.dismiss();\n      });\n  }\n\n  loadGroups() {\n    let loading = this.loadingCtrl.create();\n    loading.present();\n    let data = new HttpParams()\n      .set('person_id', this.loggedInUserData.PERSON_ID)\n      .set('selectedTeam', this.loggedInUserData.SELECTEDTEAM);\n    this.http.post<any>(this.global.APIURL+'messages/getChatGroupsName', data,{headers:this.global_api.getHeader()})\n      .subscribe(response => {\n        loading.dismiss();\n        if(response.SUCCESS){\n          let groups = response.GETCHATGROUPS;\n          for(var key in groups){\n            this.groups.push(groups[key]);\n          }\n        }\n      }, error => {\n        loading.dismiss();\n      });\n  }\n\n  goBack() {\n    this.navCtrl.pop();\n  }\n\n  setSendOption(){\n    if($('#sendToAll').is(':checked')){\n      this.showGroups = false;\n      $('.groupIDs').prop('checked', false);\n      setTimeout(() => {\n        if ($('#sendToAll').is(':checked')) {\n          $('.playerIDs').prop('checked', true);\n        } else {\n          $('.playerIDs').prop('checked', false);\n        }\n      }, 100);\n    }else{\n      $('.playerIDs, .groupIDs').prop('checked', false);\n      if($('#sendToGroup').is(':checked')){\n        this.showGroups = true;\n      }else{\n        this.showGroups = false;\n      }\n    }\n  }\n\n  sendMessage(){\n    let groupIDs = [];\n    let groupTypes = [];\n    let playerIDs = [];\n    let restPath = 'messages/sendChat';\n    if(this.showGroups){\n      restPath = 'messages/sendMultipleGroupChat';\n      $('.groupIDs:checked').each( function(){\n        groupIDs.push($(this).val());\n        groupTypes.push($(this).attr('data-type'));\n      });\n    }else{\n      $('.playerIDs:checked').each( function(){\n        playerIDs.push($(this).val());\n      });\n    }\n    if((this.showGroups && groupIDs.length > 0) || (!this.showGroups && playerIDs.length > 0)) {\n      if (this.message.length > 0) {\n        let loading = this.loadingCtrl.create();\n        loading.present();\n        let formData = {\n          'msg_type': '0',\n          'person_id': this.loggedInUserData.PERSON_ID,\n          'team_id': this.loggedInUserData.SELECTEDTEAM,\n          'selectedTeam': this.loggedInUserData.SELECTEDTEAM,\n          'first_name': this.loggedInUserData.FIRST_NAME,\n          'last_name': this.loggedInUserData.LAST_NAME,\n          'message': this.message,\n          'client_id': this.loggedInUserData.CLIENT_ID,\n          'urlified_message': '',\n          'image_value': ''\n        };\n        if(this.showGroups){\n          formData = Object.assign(formData, {'group_ids': JSON.stringify(groupIDs), 'group_types': JSON.stringify(groupTypes)});\n        }else{\n          formData = Object.assign(formData, {'group_id': '0', 'group_type': '0', 'player_ids': JSON.stringify(playerIDs)});\n        }\n        let msgData = new HttpParams({ fromObject: formData });\n         this.http.post<any>(this.global.APIURL + restPath, msgData,{headers:this.global_api.getHeader()})\n         .subscribe(response => {\n           loading.dismiss();\n           if (response.SUCCESS) {\n             this.presentToast(\"Message send successfully\");\n           }else{\n             this.presentToast(\"Error in message send\");\n           }\n         },\n         error => {\n           loading.dismiss();\n           this.presentToast(\"Error in message send\");\n         });\n      } else {\n        this.presentToast(\"Can't send blank message\");\n      }\n    } else {\n      let msg = (this.showGroups)? 'No group selected' : 'No player selected';\n      this.presentToast(msg);\n    }\n  }\n\n  private presentToast(text) {\n    let toast = this.toastCtrl.create({\n      message: text,\n      duration: 3000,\n      position: 'top'\n    });\n    toast.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/player-group-message/player-group-message.ts"],"sourceRoot":""}